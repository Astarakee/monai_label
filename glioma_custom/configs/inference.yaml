imports:
- "$import glob"
- "$import os"
- $import scripts
- $import scripts.data_prepare
- $import scripts.data_prepare.SingleChannel

bundle_root: "."
save_pred_dir: "$@bundle_root + '/eval'"
dataset_dir: "/mnt/workspace/data/00_junks/gbm_label"
datalist: "$scripts.data_prepare.data_list(@dataset_dir)"
#device: "$torch.device('cuda:0' if torch.cuda.is_available() else 'cpu')"
device: "$torch.device('cpu')"
input_channels: 4
output_classes: 3
network_def:
  _target_: monai.networks.nets.SegResNet
  in_channels: "@input_channels"
  out_channels: "@output_classes"
  init_filters: 16
  dropout_prob: 0.2
  blocks_down:
  - 1
  - 2
  - 2
  - 2
  - 4
  blocks_up:
  - 1
  - 1
  - 1
  - 1
network: "$@network_def.to(@device)"
preprocessing:
  _target_: Compose
  transforms:
  - _target_: LoadImaged
    keys: image
  - _target_: EnsureChannelFirstd
    keys: image
  - _target_: Orientationd
    keys: image
    axcodes: RAS
  - _target_: Spacingd
    keys: image
    pixdim:
    - 1.0
    - 1.0
    - 1.0
    mode: bilinear
  - _target_: NormalizeIntensityd
    keys: image
    nonzero: True
    channel_wise: True
dataset:
  _target_: Dataset
  data: "@datalist"
  transform: "@preprocessing"

dataloader:
  _target_: DataLoader
  dataset: "@dataset"
  batch_size: 1
  shuffle: false
  num_workers: 4

postprocessing:
  _target_: Compose
  transforms:
  - _target_: Invertd
    keys: pred
    transform: "@preprocessing"
    orig_keys: image
    meta_keys: pred_meta_dict
    orig_meta_keys: image_meta_dict
    meta_key_postfix: meta_dict
    nearest_interp: False
    to_tensor: True
  - _target_: AsDiscreted
    keys: pred
    sigmoid: True
  - _target_: scripts.data_prepare.SingleChannel
    keys: pred
  - _target_: SaveImaged
    keys: pred
    meta_keys: pred_meta_dict
    output_dir: "@save_pred_dir"
    output_postfix: seg
    resample: False
    separate_folder: False

inferer:
  _target_: SlidingWindowInferer
  roi_size:
  - 128
  - 128
  - 128
  sw_batch_size: 4
  overlap: 0.5

handlers:
- _target_: CheckpointLoader
  load_path: "$@bundle_root + '/models/model.pt'"
  load_dict:
    model: "@network"
- _target_: StatsHandler
  iteration_log: false

evaluator:
  _target_: SupervisedEvaluator
  device: "@device"
  val_data_loader: "@dataloader"
  network: "@network"
  inferer: "@inferer"
  postprocessing: "@postprocessing"
  val_handlers: "@handlers"
  amp: true

initialize:
- "$setattr(torch.backends.cudnn, 'benchmark', True)"

run:
- "$@evaluator.run()"